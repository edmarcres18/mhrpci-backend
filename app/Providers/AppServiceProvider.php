<?php

namespace App\Providers;

use App\Models\SiteSetting;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\URL;
use Illuminate\Support\ServiceProvider;
use Inertia\Inertia;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        $this->enforceHttps();
        $this->configureTrustedProxies();
    }

    /**
     * Enforce HTTPS in production environment.
     *
     * This method ensures that all URLs generated by Laravel use HTTPS
     * when the application is running in production environment.
     * In non-production environments, it respects the APP_URL setting.
     */
    private function enforceHttps(): void
    {
        // Only enforce HTTPS in production environment
        if (App::environment('production')) {
            // Force HTTPS for all URL generation
            URL::forceScheme('https');

            // Ensure secure cookies in production
            if (request()->isSecure() || request()->header('X-Forwarded-Proto') === 'https') {
                config(['session.secure' => true]);
                config(['session.same_site' => 'none']);
            }
        } else {
            // In non-production environments, use the scheme from APP_URL
            $appUrl = config('app.url');
            if ($appUrl) {
                $scheme = parse_url($appUrl, PHP_URL_SCHEME);
                if ($scheme) {
                    URL::forceScheme($scheme);
                }
            }
        }
    }

    /**
     * Configure trusted proxies for proper HTTPS detection.
     *
     * This is essential when running behind a reverse proxy like Cloudflare,
     * Nginx, or load balancer to ensure Laravel correctly detects HTTPS.
     */
    private function configureTrustedProxies(): void
    {
        // Trust all proxies in production (Cloudflare, load balancers, etc.)
        if (App::environment('production')) {
            request()->setTrustedProxies(
                ['*'], // Trust all proxies in production
                \Illuminate\Http\Request::HEADER_X_FORWARDED_FOR |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_HOST |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_PORT |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_PROTO |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_AWS_ELB
            );
        } else {
            // In development, trust local proxies only
            request()->setTrustedProxies(
                ['127.0.0.1', '::1', 'localhost'],
                \Illuminate\Http\Request::HEADER_X_FORWARDED_FOR |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_HOST |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_PORT |
                \Illuminate\Http\Request::HEADER_X_FORWARDED_PROTO
            );
        }
    }
}
